#pragma checksum "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a78fee06594045e5c8663e6af31d8124d6ce1161"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Order_Transactions), @"mvc.1.0.view", @"/Views/Order/Transactions.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\Bigger things\Library\Library\Library\Views\_ViewImports.cshtml"
using Library;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Bigger things\Library\Library\Library\Views\_ViewImports.cshtml"
using Library.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a78fee06594045e5c8663e6af31d8124d6ce1161", @"/Views/Order/Transactions.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dadb7a731bfbb305c411bc5eb7a307dbd6008a89", @"/Views/_ViewImports.cshtml")]
    public class Views_Order_Transactions : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<Library.ViewModels.OrderVm>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Book", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Returned", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
  
    ViewData["Title"] = "Transactions";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""container-md"">
    <div class=""row"">
        <div class=""col-xs-10"">
            <div class=""panel panel-primary"">
                <div class=""panel-heading"">
                    <h2 class=""panel-title"">
                        List of all transactions
                    </h2>
                </div>

                <table class=""table table-hover"" style=""cursor:default"" id=""table"">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th onclick=""sortTable(1)"">Customer Name</th>
                            <th>Customer ID</th>
                            <th>Book ID</th>
                            <th class=""align-text-top"">Book ISBN</th>
                            <th onclick=""sortTable(5)"">Book Name</th>
                            <th onclick=""sortTable(6)"">Book Author</th>
                            <th>Requested On</th>
                            <th class=""align-text-top"">Return By</t");
            WriteLiteral("h>\r\n                            <th class=\"align-text-top\">Returned On</th>\r\n                            <th class=\"align-text-top\">Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n");
#nullable restore
#line 35 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                         foreach (var order in Model)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr valign=\"top\">\r\n                                <td>");
#nullable restore
#line 38 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.Order.ID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 39 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.FullName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 40 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.Order.UserID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 41 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.Order.BookID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 42 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.BookISBN);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 43 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.BookName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n");
#nullable restore
#line 44 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                                 if (order.BookAuthor == null)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <td>N/A</td>\r\n");
#nullable restore
#line 47 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                                }
                                else
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <td>");
#nullable restore
#line 50 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                                   Write(order.BookAuthor);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n");
#nullable restore
#line 51 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <td>");
#nullable restore
#line 52 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.RequestedOn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 53 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.Order.ReturnBy);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 54 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.Order.ReturnedOn);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 55 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                               Write(order.Order.Status);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n");
#nullable restore
#line 56 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                                 if (order.Order.Status == "active")
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <td>\r\n                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a78fee06594045e5c8663e6af31d8124d6ce116110467", async() => {
                WriteLiteral("\r\n                                            <input type=\"Hidden\" name=\"bookId\"");
                BeginWriteAttribute("value", " value=\"", 2781, "\"", 2808, 1);
#nullable restore
#line 60 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
WriteAttributeValue("", 2789, order.Order.BookID, 2789, 19, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n                                            <input type=\"Hidden\" name=\"orderId\"");
                BeginWriteAttribute("value", " value=\"", 2893, "\"", 2916, 1);
#nullable restore
#line 61 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
WriteAttributeValue("", 2901, order.Order.ID, 2901, 15, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n                                            <input type=\"submit\" value=\"Return\" class=\"btn btn-primary btn-outline-primary\" />\r\n                                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    </td>\r\n");
#nullable restore
#line 65 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            </tr>\r\n");
#nullable restore
#line 67 "F:\Bigger things\Library\Library\Library\Views\Order\Transactions.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">
        function sortTable(n) {
            var table,
                rows,
                switching,
                i,
                x,
                y,
                shouldSwitch,
                dir,
                switchcount = 0;
            table = document.getElementById(""table"");
            switching = true;
            //Set the sorting direction to ascending:
            dir = ""asc"";
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.getElementsByTagName(""TR"");
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < rows.length - 1; i++) { //Change i=0 if you have the header th a separate table.
                    //start by saying there should ");
                WriteLiteral(@"be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName(""TD"")[n];
                    y = rows[i + 1].getElementsByTagName(""TD"")[n];
                    /*check if the two rows should switch place,
                    based on the direction, asc or desc:*/
                    if (dir == ""asc"") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == ""desc"") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;");
                WriteLiteral(@"
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is ""asc"",
                    set the direction to ""desc"" and run the while loop again.*/
                    if (switchcount == 0 && dir == ""asc"") {
                        dir = ""desc"";
                        switching = true;
                    }
                }
            }
        }


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<Library.ViewModels.OrderVm>> Html { get; private set; }
    }
}
#pragma warning restore 1591
