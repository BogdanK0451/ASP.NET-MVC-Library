@model IEnumerable<Library.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Add a Book</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.ID)</th>
            <th>
                @Html.DisplayNameFor(model => model.Isbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                Released
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Summary)
            </th>
            <th>Cover URL</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string summary;
            @if (String.IsNullOrEmpty(item.Summary))
            {
                summary = "N/A";
            }
            else
            {
                // System.Diagnostics.Debug.WriteLine(item.Summary);
                summary = item.Summary.Substring(0, 100) + "...";
            }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Isbn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @{ string yearWritten;

                        //incase YearWritten is null (this field in database is nullable) print N/A
                        if (item.YearWritten.HasValue)
                            yearWritten = item.YearWritten.Value.Year.ToString();
                        else
                            yearWritten = "N/A";
                    }
                    @yearWritten
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pages)
                </td>
                <td>
                    @summary
                </td>
                <td>@Html.DisplayFor(modelItem => item.ImageUrl)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
