@model Library.ViewModels.BooksAndReservations
@using System.IO
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor


@{
    ViewData["Title"] = "Bookshelf";
}


@{ int j = 0;}
@foreach (var book in Model.Books)
{
    <div id="modal_@j" class="modal">
        <div class="modal-content">
            <h5>@book.Title</h5>
            <p>@book.Summary</p>
        </div>
    </div>
    j++;
}

<section class="py-5 text-center container">
    <h1 class="fw-light">Available</h1>
    @if (TempData["reservationProcessed"] != null)
    {
        <p class="alert alert-info" id="failureMessage">@TempData["reservationProcessed"]</p>
    }
</section>
<div class="album py-5 bg-light">
    <div class="container">
        @functions{
            public Dictionary<string, int> countHelper(IEnumerable<Book> books)
            {
                Dictionary<string, int> unusedBooksCount = new Dictionary<string, int>();
                foreach (var book in books)
                {
                    if (!unusedBooksCount.ContainsKey(book.Isbn))
                    {
                        unusedBooksCount.Add(book.Isbn, 0);
                        if (book.Borrowed == false)
                        {
                            unusedBooksCount[book.Isbn] += 1;
                        }
                    }
                }
                return unusedBooksCount;
            }
        }

        @{
            int i = 0;
            List<String> shownISBNs = new List<string>();
            Dictionary<string, int> unusedBooksCount = countHelper(Model.Books);
        }

        @foreach (var book in Model.Books)
        {

            //check if book was already shown
            @if (!shownISBNs.Contains(book.Isbn))
            {
                string author;
                string yearWritten;
                @if (String.IsNullOrEmpty(book.Author))
                    author = "N/A";
                else
                    author = book.Author;
                //incase YearWritten is null (this field in database is nullable) print N/A
                @if (book.YearWritten.HasValue)
                    yearWritten = "Year: " + book.YearWritten.Value.Year.ToString();
                else
                    yearWritten = "Year: N/A";
                string titleAndAuthor = book.Title + " by " + author;
                @if (i % 3 == 0)
                {
                    @Html.Raw("<div class=\"row row-eq-height\">")
                }
                string available = unusedBooksCount[book.Isbn] > 0 ? "Yes" : "No";



                <div class="col-md-4">
                    <div class="card shadow-sm">
                        @*incase image is missing, show default image*@

                        @if (File.Exists(Directory.GetCurrentDirectory() + "/wwwroot" + book.ImageUrl))
                        {
                            <img style="object-fit:contain;height:300px;width:100%" src="@Url.Content(book.ImageUrl)" />
                        }
                        else
                        {
                            <img style="object-fit:contain;height:300px;width:100%" src="@Url.Content("/images/default-image.jpg")" />
                        }

                        <div class="card-body">
                            <p class="card-text" style="height:50px; overflow:auto;">@titleAndAuthor</p>
                            <div class="d-flex justify-content-between align-books-center">
                                <div class="btn-group">
                                    @*grey out the button incase there's no books left*@
                                    @{ if (unusedBooksCount[book.Isbn] > 0 && !String.IsNullOrEmpty(HttpContextAccessor.HttpContext.Session.GetString("id")) )
                                        {
                                            <form class="form" asp-controller="Order" asp-action="CreateReservation">
                                                <input type="Hidden" asp-for="Reservation.BookID" value="@book.ID" />
                                                <input type="Hidden" asp-for="Reservation.CustomerID" value="@HttpContextAccessor.HttpContext.Session.GetString("id")" />
                                                <input type="Hidden" class="dateTime" asp-for="Reservation.RequestedAt" />
                                                <input type="submit" value="Reserve" class="btn btn-primary btn-outline-secondary" />
                                            </form>
                                        }
                                        else
                                        {
                                            {<button type="button" data-toggle="tooltip" data-placement="top" title="If the book is available, you have to log in" disabled class="btn btn-primary btn-outline-primary">Reserve</button>}
                                        }
                                    }
                                    <button type="button" id="summary_@i" class="btn btn-sm btn-outline-primary summary">Summary</button>
                                </div>
                                <small class="text-muted font-weight-bold">
                                    <span> Available: </span>
                                    @if (unusedBooksCount[book.Isbn] > 0)
                                    {<span style="margin-right:10px; color:green">@available</span>}
                                else
                                {<span style="margin-right:10px; color:red">@available</span>}
                                    <span>@yearWritten</span>
                                </small>
                            </div>
                        </div>
                    </div>
                </div>

                @if (i % 3 == 2)
                {@Html.Raw("</div>")}
                i++;
                shownISBNs.Add(book.Isbn);
            }
        }

    </div>
</div>



@section Scripts{

    <script type="text/javascript">
        ////probably a non optimal location for js..??
        let summary_buttons = document.querySelectorAll(".summary");
        summary_buttons.forEach(summary_button => {
            summary_button.addEventListener("click", showSummary)
        })

        function showSummary(e) {
            //extract number from id
            let modal_index = e.target.id.replace(/[^0-9]/g, "");
            let modal = document.querySelector(`#modal_${modal_index}`);
            //show book summary popup
            modal.style.display = "block";
            let clickListener = window.addEventListener("click", e => { if (e.target == modal) modal.style.display = "none" })
            window.removeEventListener("click", clickListener);
        }

        let dateTimeInput = document.getElementById("dateTime");
        let forms = document.querySelectorAll(".form");
        forms.forEach(form => {
            form.addEventListener("submit", getCurrentDateTime)
        })


        function getCurrentDateTime(e) {
            e.preventDefault();
            let dateTimeInput = e.target.querySelector(".dateTime");
            dateTimeInput.value = new Date().toISOString();
            e.target.submit();

        }

    </script>
}